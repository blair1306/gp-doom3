<dec f='codebrowser/idlib/Parser.h' l='203' type='int idParser::ReadLine(idToken * token)'/>
<def f='codebrowser/idlib/Parser.cpp' l='913' ll='929' type='int idParser::ReadLine(idToken * token)'/>
<use f='codebrowser/idlib/Parser.cpp' l='1022' u='c' c='_ZN8idParser15Directive_undefEv'/>
<use f='codebrowser/idlib/Parser.cpp' l='1064' u='c' c='_ZN8idParser16Directive_defineEv'/>
<use f='codebrowser/idlib/Parser.cpp' l='1095' u='c' c='_ZN8idParser16Directive_defineEv'/>
<use f='codebrowser/idlib/Parser.cpp' l='1104' u='c' c='_ZN8idParser16Directive_defineEv'/>
<use f='codebrowser/idlib/Parser.cpp' l='1127' u='c' c='_ZN8idParser16Directive_defineEv'/>
<use f='codebrowser/idlib/Parser.cpp' l='1142' u='c' c='_ZN8idParser16Directive_defineEv'/>
<use f='codebrowser/idlib/Parser.cpp' l='1160' u='c' c='_ZN8idParser16Directive_defineEv'/>
<use f='codebrowser/idlib/Parser.cpp' l='1212' u='c' c='_ZN8idParser16Directive_if_defEi'/>
<use f='codebrowser/idlib/Parser.cpp' l='1806' u='c' c='_ZN8idParser8EvaluateEPlPdi'/>
<use f='codebrowser/idlib/Parser.cpp' l='1855' u='c' c='_ZN8idParser8EvaluateEPlPdi'/>
<use f='codebrowser/idlib/Parser.cpp' l='2028' u='c' c='_ZN8idParser14Directive_lineEv'/>
<use f='codebrowser/idlib/Parser.cpp' l='2041' u='c' c='_ZN8idParser15Directive_errorEv'/>
<use f='codebrowser/idlib/Parser.cpp' l='2057' u='c' c='_ZN8idParser17Directive_warningEv'/>
<use f='codebrowser/idlib/Parser.cpp' l='2074' u='c' c='_ZN8idParser16Directive_pragmaEv'/>
<use f='codebrowser/idlib/Parser.cpp' l='2199' u='c' c='_ZN8idParser13ReadDirectiveEv'/>
<doc f='codebrowser/idlib/Parser.cpp' l='905'>/*
================
idParser::ReadLine

reads a token from the current line, continues reading on the next
line only if a backslash &apos;\&apos; is found
================
*/</doc>
