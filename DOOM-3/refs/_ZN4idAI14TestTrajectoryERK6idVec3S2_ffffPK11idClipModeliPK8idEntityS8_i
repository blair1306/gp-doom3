<dec f='codebrowser/d3xp/ai/AI.h' l='283' type='static bool idAI::TestTrajectory(const idVec3 &amp; start, const idVec3 &amp; end, float zVel, float gravity, float time, float max_height, const idClipModel * clip, int clipmask, const idEntity * ignore, const idEntity * targetEntity, int drawtime)'/>
<doc f='codebrowser/d3xp/ai/AI.h' l='282'>// Return true if the trajectory of the clip model is collision free.</doc>
<def f='codebrowser/d3xp/ai/AI_pathing.cpp' l='1350' ll='1429' type='static bool idAI::TestTrajectory(const idVec3 &amp; start, const idVec3 &amp; end, float zVel, float gravity, float time, float max_height, const idClipModel * clip, int clipmask, const idEntity * ignore, const idEntity * targetEntity, int drawtime)'/>
<use f='codebrowser/d3xp/ai/AI_pathing.cpp' l='1515' u='c' c='_ZN4idAI17PredictTrajectoryERK6idVec3S2_fS2_PK11idClipModelifPK8idEntityS8_iRS0_'/>
<doc f='codebrowser/d3xp/ai/AI_pathing.cpp' l='1345'>/*
=====================
idAI::TestTrajectory
=====================
*/</doc>
<dec f='codebrowser/game/ai/AI.h' l='269' type='static bool idAI::TestTrajectory(const idVec3 &amp; start, const idVec3 &amp; end, float zVel, float gravity, float time, float max_height, const idClipModel * clip, int clipmask, const idEntity * ignore, const idEntity * targetEntity, int drawtime)'/>
<doc f='codebrowser/game/ai/AI.h' l='268'>// Return true if the trajectory of the clip model is collision free.</doc>
<def f='codebrowser/game/ai/AI_pathing.cpp' l='1349' ll='1428' type='static bool idAI::TestTrajectory(const idVec3 &amp; start, const idVec3 &amp; end, float zVel, float gravity, float time, float max_height, const idClipModel * clip, int clipmask, const idEntity * ignore, const idEntity * targetEntity, int drawtime)'/>
<use f='codebrowser/game/ai/AI_pathing.cpp' l='1514' u='c' c='_ZN4idAI17PredictTrajectoryERK6idVec3S2_fS2_PK11idClipModelifPK8idEntityS8_iRS0_'/>
<doc f='codebrowser/game/ai/AI_pathing.cpp' l='1344'>/*
=====================
idAI::TestTrajectory
=====================
*/</doc>
