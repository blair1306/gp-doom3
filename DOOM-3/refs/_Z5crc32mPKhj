<dec f='codebrowser/framework/Unzip.cpp' l='906' type='uLong crc32(uLong crc, const Byte * buf, uInt len)'/>
<use f='codebrowser/framework/Unzip.cpp' l='2020' u='c' c='_Z18unzReadCurrentFilePvS_j'/>
<use f='codebrowser/framework/Unzip.cpp' l='2053' u='c' c='_Z18unzReadCurrentFilePvS_j'/>
<def f='codebrowser/framework/Unzip.cpp' l='2377' ll='2394' type='uLong crc32(uLong crc, const Byte * buf, uInt len)'/>
<doc f='codebrowser/framework/Unzip.cpp' l='891'>/*
     Update a running Adler-32 checksum with the bytes buf[0..len-1] and
   return the updated checksum. If buf is NULL, this function returns
   the required initial value for the checksum.
   An Adler-32 checksum is almost as reliable as a CRC32 but can be computed
   much faster. Usage example:

     uLong adler = adler32(0L, Z_NULL, 0);

     while (read_buffer(buffer, length) != EOF) {
       adler = adler32(adler, buffer, length);
     }
     if (adler != original_adler) error();
*/</doc>
<doc f='codebrowser/framework/Unzip.cpp' l='2376'>/* ========================================================================= */</doc>
