<dec f='codebrowser/idlib/containers/List.h' l='126' type='int idList::IndexOf(const type * obj) const'/>
<def f='codebrowser/idlib/containers/List.h' l='827' ll='837' type='int idList::IndexOf(const type * objptr) const'/>
<doc f='codebrowser/idlib/containers/List.h' l='126'>// returns the index for the pointer to an element in the list</doc>
<doc f='codebrowser/idlib/containers/List.h' l='817'>/*
================
idList&lt;type&gt;::IndexOf

Takes a pointer to an element in the list and returns the index of the element.
This is NOT a guarantee that the object is really in the list. 
Function will assert in debug builds if pointer is outside the bounds of the list,
but remains silent in release builds.
================
*/</doc>
