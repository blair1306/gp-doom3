<dec f='codebrowser/d3xp/ai/AI.h' l='285' type='static bool idAI::PredictTrajectory(const idVec3 &amp; firePos, const idVec3 &amp; target, float projectileSpeed, const idVec3 &amp; projGravity, const idClipModel * clip, int clipmask, float max_height, const idEntity * ignore, const idEntity * targetEntity, int drawtime, idVec3 &amp; aimDir)'/>
<doc f='codebrowser/d3xp/ai/AI.h' l='284'>// Finds the best collision free trajectory for a clip model.</doc>
<use f='codebrowser/d3xp/Misc.cpp' l='3183' u='c' c='_ZN16idPhantomObjects5ThinkEv'/>
<use f='codebrowser/d3xp/ai/AI.cpp' l='4131' u='c' c='_ZNK4idAI9GetAimDirERK6idVec3P8idEntityPKS3_RS0_'/>
<use f='codebrowser/d3xp/ai/AI.cpp' l='4139' u='c' c='_ZNK4idAI9GetAimDirERK6idVec3P8idEntityPKS3_RS0_'/>
<use f='codebrowser/d3xp/ai/AI_Vagary.cpp' l='111' u='c' c='_ZN11idAI_Vagary25Event_ChooseObjectToThrowERK6idVec3S2_fff'/>
<use f='codebrowser/d3xp/ai/AI_Vagary.cpp' l='136' u='c' c='_ZN11idAI_Vagary24Event_ThrowObjectAtEnemyEP8idEntityf'/>
<use f='codebrowser/d3xp/ai/AI_events.cpp' l='1382' u='c' c='_ZN4idAI21Event_GetJumpVelocityERK6idVec3ff'/>
<def f='codebrowser/d3xp/ai/AI_pathing.cpp' l='1439' ll='1525' type='static bool idAI::PredictTrajectory(const idVec3 &amp; firePos, const idVec3 &amp; target, float projectileSpeed, const idVec3 &amp; projGravity, const idClipModel * clip, int clipmask, float max_height, const idEntity * ignore, const idEntity * targetEntity, int drawtime, idVec3 &amp; aimDir)'/>
<doc f='codebrowser/d3xp/ai/AI_pathing.cpp' l='1431'>/*
=====================
idAI::PredictTrajectory

  returns true if there is a collision free trajectory for the clip model
  aimDir is set to the ideal aim direction in order to hit the target
=====================
*/</doc>
<dec f='codebrowser/game/ai/AI.h' l='271' type='static bool idAI::PredictTrajectory(const idVec3 &amp; firePos, const idVec3 &amp; target, float projectileSpeed, const idVec3 &amp; projGravity, const idClipModel * clip, int clipmask, float max_height, const idEntity * ignore, const idEntity * targetEntity, int drawtime, idVec3 &amp; aimDir)'/>
<doc f='codebrowser/game/ai/AI.h' l='270'>// Finds the best collision free trajectory for a clip model.</doc>
<use f='codebrowser/game/Misc.cpp' l='3125' u='c' c='_ZN16idPhantomObjects5ThinkEv'/>
<use f='codebrowser/game/ai/AI.cpp' l='4008' u='c' c='_ZNK4idAI9GetAimDirERK6idVec3P8idEntityPKS3_RS0_'/>
<use f='codebrowser/game/ai/AI.cpp' l='4016' u='c' c='_ZNK4idAI9GetAimDirERK6idVec3P8idEntityPKS3_RS0_'/>
<use f='codebrowser/game/ai/AI_Vagary.cpp' l='111' u='c' c='_ZN11idAI_Vagary25Event_ChooseObjectToThrowERK6idVec3S2_fff'/>
<use f='codebrowser/game/ai/AI_Vagary.cpp' l='136' u='c' c='_ZN11idAI_Vagary24Event_ThrowObjectAtEnemyEP8idEntityf'/>
<use f='codebrowser/game/ai/AI_events.cpp' l='1233' u='c' c='_ZN4idAI21Event_GetJumpVelocityERK6idVec3ff'/>
<def f='codebrowser/game/ai/AI_pathing.cpp' l='1438' ll='1524' type='static bool idAI::PredictTrajectory(const idVec3 &amp; firePos, const idVec3 &amp; target, float projectileSpeed, const idVec3 &amp; projGravity, const idClipModel * clip, int clipmask, float max_height, const idEntity * ignore, const idEntity * targetEntity, int drawtime, idVec3 &amp; aimDir)'/>
<doc f='codebrowser/game/ai/AI_pathing.cpp' l='1430'>/*
=====================
idAI::PredictTrajectory

  returns true if there is a collision free trajectory for the clip model
  aimDir is set to the ideal aim direction in order to hit the target
=====================
*/</doc>
