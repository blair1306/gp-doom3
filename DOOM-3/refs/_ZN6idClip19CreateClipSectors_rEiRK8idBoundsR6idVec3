<dec f='codebrowser/d3xp/physics/Clip.h' l='325' type='struct clipSector_s * idClip::CreateClipSectors_r(const int depth, const idBounds &amp; bounds, idVec3 &amp; maxSector)'/>
<def f='codebrowser/d3xp/physics/Clip.cpp' l='636' ll='677' type='clipSector_t * idClip::CreateClipSectors_r(const int depth, const idBounds &amp; bounds, idVec3 &amp; maxSector)'/>
<use f='codebrowser/d3xp/physics/Clip.cpp' l='673' u='c' c='_ZN6idClip19CreateClipSectors_rEiRK8idBoundsR6idVec3'/>
<use f='codebrowser/d3xp/physics/Clip.cpp' l='674' u='c' c='_ZN6idClip19CreateClipSectors_rEiRK8idBoundsR6idVec3'/>
<use f='codebrowser/d3xp/physics/Clip.cpp' l='697' u='c' c='_ZN6idClip4InitEv'/>
<doc f='codebrowser/d3xp/physics/Clip.cpp' l='629'>/*
===============
idClip::CreateClipSectors_r

Builds a uniformly subdivided tree for the given world size
===============
*/</doc>
<dec f='codebrowser/game/physics/Clip.h' l='325' type='struct clipSector_s * idClip::CreateClipSectors_r(const int depth, const idBounds &amp; bounds, idVec3 &amp; maxSector)'/>
<def f='codebrowser/game/physics/Clip.cpp' l='636' ll='677' type='clipSector_t * idClip::CreateClipSectors_r(const int depth, const idBounds &amp; bounds, idVec3 &amp; maxSector)'/>
<use f='codebrowser/game/physics/Clip.cpp' l='673' u='c' c='_ZN6idClip19CreateClipSectors_rEiRK8idBoundsR6idVec3'/>
<use f='codebrowser/game/physics/Clip.cpp' l='674' u='c' c='_ZN6idClip19CreateClipSectors_rEiRK8idBoundsR6idVec3'/>
<use f='codebrowser/game/physics/Clip.cpp' l='697' u='c' c='_ZN6idClip4InitEv'/>
<doc f='codebrowser/game/physics/Clip.cpp' l='629'>/*
===============
idClip::CreateClipSectors_r

Builds a uniformly subdivided tree for the given world size
===============
*/</doc>
