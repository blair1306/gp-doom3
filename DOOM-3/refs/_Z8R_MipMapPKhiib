<dec f='codebrowser/renderer/Image.h' l='463' type='byte * R_MipMap(const byte * in, int width, int height, bool preserveBorder)'/>
<use f='codebrowser/renderer/Image_load.cpp' l='567' u='c' c='_ZN7idImage13GenerateImageEPKhii15textureFilter_tb15textureRepeat_t14textureDepth_t'/>
<use f='codebrowser/renderer/Image_load.cpp' l='578' u='c' c='_ZN7idImage13GenerateImageEPKhii15textureFilter_tb15textureRepeat_t14textureDepth_t'/>
<use f='codebrowser/renderer/Image_load.cpp' l='683' u='c' c='_ZN7idImage13GenerateImageEPKhii15textureFilter_tb15textureRepeat_t14textureDepth_t'/>
<use f='codebrowser/renderer/Image_load.cpp' l='945' u='c' c='_ZN7idImage17GenerateCubeImageEPPKhi15textureFilter_tb14textureDepth_t'/>
<use f='codebrowser/renderer/Image_load.cpp' l='958' u='c' c='_ZN7idImage17GenerateCubeImageEPPKhi15textureFilter_tb14textureDepth_t'/>
<def f='codebrowser/renderer/Image_process.cpp' l='396' ll='466' type='byte * R_MipMap(const byte * in, int width, int height, bool preserveBorder)'/>
<use f='codebrowser/renderer/Image_process.cpp' l='490' u='c' c='_Z10R_MipMap3DPKhiiib'/>
<doc f='codebrowser/renderer/Image_process.cpp' l='383'>/*
================
R_MipMap

Returns a new copy of the texture, quartered in size and filtered.

If a texture is intended to be used in GL_CLAMP or GL_CLAMP_TO_EDGE mode with
a completely transparent border, we must prevent any blurring into the outer
ring of texels by filling it with the border from the previous level.  This
will result in a slight shrinking of the texture as it mips, but better than
smeared clamps...
================
*/</doc>
<use f='codebrowser/tools/compilers/renderbump/renderbump.cpp' l='1032' u='c' c='_ZL15WriteRenderBumpP12renderBump_ti'/>
<use f='codebrowser/tools/compilers/renderbump/renderbump.cpp' l='1036' u='c' c='_ZL15WriteRenderBumpP12renderBump_ti'/>
<use f='codebrowser/tools/compilers/renderbump/renderbump.cpp' l='1040' u='c' c='_ZL15WriteRenderBumpP12renderBump_ti'/>
