<dec f='codebrowser/d3xp/script/Script_Compiler.h' l='237' type='idVarDef * idCompiler::GetImmediate(idTypeDef * type, const eval_t * eval, const char * string)'/>
<use f='codebrowser/d3xp/script/Script_Compiler.cpp' l='293' u='c' c='_ZN10idCompiler23VirtualFunctionConstantEP8idVarDef'/>
<use f='codebrowser/d3xp/script/Script_Compiler.cpp' l='308' u='c' c='_ZN10idCompiler12SizeConstantEi'/>
<use f='codebrowser/d3xp/script/Script_Compiler.cpp' l='323' u='c' c='_ZN10idCompiler12JumpConstantEi'/>
<def f='codebrowser/d3xp/script/Script_Compiler.cpp' l='460' ll='477' type='idVarDef * idCompiler::GetImmediate(idTypeDef * type, const eval_t * eval, const char * string)'/>
<use f='codebrowser/d3xp/script/Script_Compiler.cpp' l='561' u='c' c='_ZN10idCompiler14OptimizeOpcodeEPK8opcode_sP8idVarDefS4_'/>
<use f='codebrowser/d3xp/script/Script_Compiler.cpp' l='921' u='c' c='_ZN10idCompiler14ParseImmediateEv'/>
<doc f='codebrowser/d3xp/script/Script_Compiler.cpp' l='453'>/*
============
idCompiler::GetImmediate

returns an existing immediate with the same value, or allocates a new one
============
*/</doc>
<dec f='codebrowser/game/script/Script_Compiler.h' l='237' type='idVarDef * idCompiler::GetImmediate(idTypeDef * type, const eval_t * eval, const char * string)'/>
<use f='codebrowser/game/script/Script_Compiler.cpp' l='293' u='c' c='_ZN10idCompiler23VirtualFunctionConstantEP8idVarDef'/>
<use f='codebrowser/game/script/Script_Compiler.cpp' l='308' u='c' c='_ZN10idCompiler12SizeConstantEi'/>
<use f='codebrowser/game/script/Script_Compiler.cpp' l='323' u='c' c='_ZN10idCompiler12JumpConstantEi'/>
<def f='codebrowser/game/script/Script_Compiler.cpp' l='460' ll='477' type='idVarDef * idCompiler::GetImmediate(idTypeDef * type, const eval_t * eval, const char * string)'/>
<use f='codebrowser/game/script/Script_Compiler.cpp' l='561' u='c' c='_ZN10idCompiler14OptimizeOpcodeEPK8opcode_sP8idVarDefS4_'/>
<use f='codebrowser/game/script/Script_Compiler.cpp' l='921' u='c' c='_ZN10idCompiler14ParseImmediateEv'/>
<doc f='codebrowser/game/script/Script_Compiler.cpp' l='453'>/*
============
idCompiler::GetImmediate

returns an existing immediate with the same value, or allocates a new one
============
*/</doc>
