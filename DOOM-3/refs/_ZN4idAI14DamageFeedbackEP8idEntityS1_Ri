<dec f='codebrowser/d3xp/ai/AI.h' l='534' type='void idAI::DamageFeedback(idEntity * victim, idEntity * inflictor, int &amp; damage)'/>
<inh f='codebrowser/d3xp/Entity.h' l='315' c='_ZN8idEntity14DamageFeedbackEPS_S0_Ri'/>
<def f='codebrowser/d3xp/ai/AI.cpp' l='4351' ll='4359' type='void idAI::DamageFeedback(idEntity * victim, idEntity * inflictor, int &amp; damage)'/>
<doc f='codebrowser/d3xp/ai/AI.cpp' l='4341'>/*
================
idAI::DamageFeedback

callback function for when another entity received damage from this entity.  damage can be adjusted and returned to the caller.

FIXME: This gets called when we call idPlayer::CalcDamagePoints from idAI::AttackMelee, which then checks for a saving throw,
possibly forcing a miss.  This is harmless behavior ATM, but is not intuitive.
================
*/</doc>
<dec f='codebrowser/game/ai/AI.h' l='508' type='void idAI::DamageFeedback(idEntity * victim, idEntity * inflictor, int &amp; damage)'/>
<inh f='codebrowser/game/Entity.h' l='299' c='_ZN8idEntity14DamageFeedbackEPS_S0_Ri'/>
<def f='codebrowser/game/ai/AI.cpp' l='4215' ll='4223' type='void idAI::DamageFeedback(idEntity * victim, idEntity * inflictor, int &amp; damage)'/>
<doc f='codebrowser/game/ai/AI.cpp' l='4205'>/*
================
idAI::DamageFeedback

callback function for when another entity received damage from this entity.  damage can be adjusted and returned to the caller.

FIXME: This gets called when we call idPlayer::CalcDamagePoints from idAI::AttackMelee, which then checks for a saving throw,
possibly forcing a miss.  This is harmless behavior ATM, but is not intuitive.
================
*/</doc>
