<dec f='codebrowser/d3xp/physics/Physics_RigidBody.h' l='187' type='bool idPhysics_RigidBody::CheckForCollisions(const float deltaTime, rigidBodyPState_t &amp; next, trace_t &amp; collision)'/>
<def f='codebrowser/d3xp/physics/Physics_RigidBody.cpp' l='172' ll='207' type='bool idPhysics_RigidBody::CheckForCollisions(const float deltaTime, rigidBodyPState_t &amp; next, trace_t &amp; collision)'/>
<use f='codebrowser/d3xp/physics/Physics_RigidBody.cpp' l='900' u='c' c='_ZN19idPhysics_RigidBody8EvaluateEii'/>
<doc f='codebrowser/d3xp/physics/Physics_RigidBody.cpp' l='164'>/*
================
idPhysics_RigidBody::CheckForCollisions

  Check for collisions between the current and next state.
  If there is a collision the next state is set to the state at the moment of impact.
================
*/</doc>
<dec f='codebrowser/game/physics/Physics_RigidBody.h' l='187' type='bool idPhysics_RigidBody::CheckForCollisions(const float deltaTime, rigidBodyPState_t &amp; next, trace_t &amp; collision)'/>
<def f='codebrowser/game/physics/Physics_RigidBody.cpp' l='172' ll='207' type='bool idPhysics_RigidBody::CheckForCollisions(const float deltaTime, rigidBodyPState_t &amp; next, trace_t &amp; collision)'/>
<use f='codebrowser/game/physics/Physics_RigidBody.cpp' l='900' u='c' c='_ZN19idPhysics_RigidBody8EvaluateEii'/>
<doc f='codebrowser/game/physics/Physics_RigidBody.cpp' l='164'>/*
================
idPhysics_RigidBody::CheckForCollisions

  Check for collisions between the current and next state.
  If there is a collision the next state is set to the state at the moment of impact.
================
*/</doc>
