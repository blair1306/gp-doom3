<dec f='codebrowser/idlib/math/Matrix.h' l='1907' type='bool idMatX::Inverse_UpdateRowColumn(const idVecX &amp; v, const idVecX &amp; w, int r)'/>
<def f='codebrowser/idlib/math/Matrix.cpp' l='3753' ll='3773' type='bool idMatX::Inverse_UpdateRowColumn(const idVecX &amp; v, const idVecX &amp; w, int r)'/>
<use f='codebrowser/idlib/math/Matrix.cpp' l='3801' u='c' c='_ZN6idMatX23Inverse_UpdateIncrementERK6idVecXS2_'/>
<use f='codebrowser/idlib/math/Matrix.cpp' l='3829' u='c' c='_ZN6idMatX23Inverse_UpdateDecrementERK6idVecXS2_i'/>
<use f='codebrowser/idlib/math/Matrix.cpp' l='7296' u='c' c='_ZN6idMatX4TestEv'/>
<doc f='codebrowser/idlib/math/Matrix.cpp' l='3740'>/*
============
idMatX::Inverse_UpdateRowColumn

  Updates the in-place inverse to obtain the inverse for the matrix:

      [ 0  a  0 ]
  A + [ d  b  e ]
      [ 0  c  0 ]

  where: a = v[0,r-1], b = v[r], c = v[r+1,numRows-1], d = w[0,r-1], w[r] = 0.0f, e = w[r+1,numColumns-1]
============
*/</doc>
